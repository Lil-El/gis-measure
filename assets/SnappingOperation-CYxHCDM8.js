import{gC as M,g as j,u as C,gv as O,gD as E,ae as U,gE as q,gF as B,z as A,m as J,e as P,y as _,a as K}from"./index-BZRBOKU4.js";import{r as Q}from"./dehydratedFeatureComparison-BdjGKwew.js";import{U as V}from"./InteractiveToolBase-_WiLgxM7.js";import{e as W}from"./SnappingContext-DogwoNWz.js";function lt({predicate:t=()=>!0,snappingManager:n,snappingContext:e,updatingHandles:s,useZ:o=!0}){const i=new V;if(n==null)return{snappingStep:[$,i],cancelSnapping:$};let l,p=null,a=null,c=null;const d=()=>{p=C(p),n.doneSnapping(),a!=null&&a.frameTask.remove(),a=null,l=O(l),c=null},m=X(n,o,i);let f=null,u=null,b=null;return{snappingStep:[r=>{if(!t(r))return r;const{action:v}=r;if(v==="start"){const{info:x}=r,y=Y(n.view);if(a=tt(e,r,y),a.context.selfSnappingZ=null,!o&&x!=null){const g=et(e.coordinateHelper,x.handle.component);g!=null&&(a.context.selfSnappingZ={value:g,elevationInfo:e.elevationInfo??M})}}if(a!=null){const{context:x,originalScenePos:y,originalPos:g}=a,{mapEnd:k,mapStart:Z,scenePoints:H}=r,S=F(g,T(k,Z)),z=T(Z,g),N={...r,action:"update"},R=a.context,w=nt(y,H),I=n.update({point:S,scenePoint:w,context:x});if(b=I,G(k,I,z,o),f=S,u=w,v!=="end"){const{frameTask:D}=a;p==null&&(p=new AbortController),c=L=>{s.addPromise(B(m({frameTask:D,event:N,context:R,point:S,scenePoint:w,delta:z,getLastState:()=>({point:f,scenePoint:u,updatePoint:L.forceUpdate?null:b})},p.signal)))},c({forceUpdate:!1}),l==null&&(l=j(()=>n.options.effectiveEnabled,()=>c==null?void 0:c({forceUpdate:!0})))}}return v==="end"&&d(),r},i],cancelSnapping:r=>(d(),r)}}function X(t,n,e){return A(async({frameTask:s,point:o,scenePoint:i,context:l,event:p,delta:a,getLastState:c},d)=>{const m=await s.schedule(()=>t.snap({point:o,scenePoint:i,context:l,signal:d}),d);if(m.valid){let f=await s.schedule(()=>m.apply(),d);const u=c();u.point!=null&&o!==u.point&&(f=t.update({point:u.point,scenePoint:u.scenePoint,context:l})),u.updatePoint!=null&&Q(f,u.updatePoint)||(G(p.mapEnd,f,a,n),e.execute(p))}})}function Y(t){return t.type==="3d"?t.resourceController.scheduler.registerTask(U.SNAPPING):E}function tt(t,n,e){return{context:new W({editGeometryOperations:t.editGeometryOperations,elevationInfo:t.elevationInfo,pointer:t.pointer,vertexHandle:n.info!=null?n.info.handle:null,excludeFeature:t.excludeFeature,visualizer:t.visualizer}),originalPos:n.snapOrigin!=null?t.coordinateHelper.vectorToDehydratedPoint(n.snapOrigin):n.mapStart,originalScenePos:n.scenePoints!=null?n.scenePoints.sceneStart:null,frameTask:e}}function F(t,[n,e,s]){const o=q(t);return o.x+=n,o.y+=e,o.hasZ&&(o.z+=s),o}function nt(t,n){return t==null||n==null?null:F(t,T(n.sceneEnd,n.sceneStart))}function T(t,n){const e=t.hasZ&&n.hasZ?t.z-n.z:0;return[t.x-n.x,t.y-n.y,e]}function G(t,n,[e,s,o],i){t.x=n.x+e,t.y=n.y+s,i&&t.hasZ&&n.hasZ&&(t.z=n.z+o)}function et(t,n){if(!t.hasZ())return null;const e=n.vertices;let s=null;for(const o of e){const i=t.getZ(o.pos);if(s!=null&&i!=null&&Math.abs(i-s)>1e-6)return null;s==null&&(s=i)}return s}function $(t){return t}let h=class extends J{constructor(t){super(t),this.constrainResult=n=>n,this._snapPoints=null,this._frameTask=null,this._abortController=null,this._stagedPoint=null,this._snap=A(async(n,e,s,o)=>{const i=this._frameTask;if(i==null)return;const l=await i.schedule(()=>e.snap({...n,context:s,signal:o}),o);l.valid&&await i.schedule(()=>{this.stagedPoint=l.apply(),n!==this._snapPoints&&this._snapPoints!=null&&(this.stagedPoint=e.update({...this._snapPoints,context:s}))},o)})}get stagedPoint(){return this._stagedPoint}set stagedPoint(t){this._stagedPoint=this.constrainResult(t)}initialize(){var n,e;const t=this.view.type==="3d"?(e=(n=this.view)==null?void 0:n.resourceController)==null?void 0:e.scheduler:null;this._frameTask=t!=null?t.registerTask(U.SNAPPING):E}destroy(){this._abortController=C(this._abortController),this._frameTask=O(this._frameTask)}update(t,n,e){this._snapPoints=t;const{point:s,scenePoint:o}=t,i=n.update({point:s,scenePoint:o,context:e});return this.stagedPoint=i,i}async snap(t,n,e){const{point:s,scenePoint:o}=t;return this.stagedPoint=n.update({point:s,scenePoint:o,context:e}),this._snapPoints=t,this._abortController==null&&(this._abortController=new AbortController),this._snap(t,n,e,this._abortController.signal)}async resnap(t,n){this._snapPoints!=null&&await this.snap(this._snapPoints,t,n)}abort(){this._abortController=C(this._abortController),this._snapPoints=null}};P([_({constructOnly:!0})],h.prototype,"view",void 0),P([_()],h.prototype,"stagedPoint",null),P([_()],h.prototype,"constrainResult",void 0),P([_()],h.prototype,"_stagedPoint",void 0),h=P([K("esri.views.interactive.snapping.SnappingOperation")],h);export{lt as f,h as p};
