import{b3 as v,m as S,et as w,a$ as d,h,g as b,B as E,eu as k,ex as C,ey as F,ew as A,r as R,ez as G,eA as P,j as I,eB as y,C as x,bW as O,dl as $,aA as z,eC as Z,e as a,y as p,a as H}from"./index-Cy4mlNgs.js";import{a as L}from"./normalizeUtilsSync-rqO8aEGT.js";import{m as M}from"./FeatureStore-plfJxTa2.js";import{e as W}from"./QueryEngine-Dlgv0PZK.js";import{i as j,o as q}from"./queryEngineUtils-I6Ljjitk.js";import{i as g,r as B,n as m}from"./symbologySnappingCandidates-BLiZvUca.js";import"./normalizeUtilsCommon-BG6t4mj0.js";import"./BoundsStore-AkTg_LDK.js";import"./PooledRBush-CdXQsE0v.js";import"./quickselect-MNhqgktj.js";import"./optimizedFeatureQueryEngineAdapter-BjvcuCyw.js";import"./centroid-BDoZr6aR.js";import"./normalizeUtils-Dm4feZdB.js";import"./WhereClause-DmiBXdNr.js";import"./executionError-N6aCOFps.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-Dk3NJwmm.js";import"./utils-DOKTL2iJ.js";import"./generateRendererUtils-CvLWrpaP.js";import"./VertexSnappingCandidate-DhRPUa77.js";import"./PointSnappingHint-DcD5wnAK.js";const _="graphics-collections";let r=class extends v(S){get updating(){return this.updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d";if(!s||t.type==="map-notes")return g();const i=async(o,n)=>(await w(e.whenLayerView(t),n)).elevationAlignPointsInFeatures(o,n);return g(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:i,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return B(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d",i=this._extrudedPolygonSymbolsCount>0;return s&&t.type!=="map-notes"&&i?m(i,async(o,n)=>{const l=await e.whenLayerView(t);return d(n),l.queryForSymbologySnapping({candidates:o,spatialReference:e.spatialReference},n)}):m()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources(e=>this._destroySource(e))}initialize(){this.updatingHandles.add(()=>this.getGraphicsLayers(),s=>{this.updatingHandles.removeHandles(_);for(const i of s)this._addMany(i.graphics.toArray()),this.handles.add([i.on("graphic-update",o=>this._onGraphicUpdate(o)),this.updatingHandles.addOnCollectionChange(()=>i.graphics,o=>this._onGraphicsChanged(o))],_)},h);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&this.addHandles([e.elevationProvider.on("elevation-change",({context:s})=>{k(s,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),b(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),h),E(()=>t,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(e,t){const{point:s}=e,i=await C(this._mapSources(l=>this._fetchCandidatesForSource(l,e,t)));d(t);const o=this._getGroundElevation,n=i.flat().map(l=>j(l,o));return F(s,n),n}get _getGroundElevation(){return q(this.view)}async _fetchCandidatesForSource(e,t,s){var c;const i=A(t,((c=this.view)==null?void 0:c.type)??"2d"),o=await e.queryEngine.executeQueryForSnapping(i,s);d(s);const n=await this._snappingElevationAligner.alignCandidates(o.candidates,s);d(s);const l=await this._symbologySnappingFetcher.fetch(n,s);d(s);const f=l.length===0?n:[...n,...l];return this._snappingElevationFilter.filter(i,f)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some(t=>t.graphics.includes(e.graphic)))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const i of e)i.geometry!=null&&(this._needsInitializeProjection(i.geometry.spatialReference)?(t.push(i.geometry.spatialReference),s.set(i.uid,i)):this._add(i));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const s=R(async n=>{await G(e.map(l=>({source:l,dest:this.spatialReference})),{signal:n}),this._markLoadedSpatialReferences(e);for(const[,l]of t)this._add(l)});this.updatingHandles.addPromise(s.promise);const i={task:s,graphics:t},o=()=>P(this._pendingAdds,i);s.promise.then(o,o),this._pendingAdds.push(i)}_markLoadedSpatialReferences(e){for(const t of e)t.wkid!=null&&this._loadedWkids.add(t.wkid),t.wkt!=null&&this._loadedWkts.add(t.wkt)}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=I.fromExtent(t));const s=this._ensureSource(t.type);if(s==null)return;const i=this._createOptimizedFeature(e.uid,t);i!=null&&(s.featureStore.add(i),y(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){return(e.wkid==null||!this._loadedWkids.has(e.wkid))&&(e.wkt==null||!this._loadedWkts.has(e.wkt))&&!x(e,this.spatialReference)}_createOptimizedFeature(e,t){const s=O(L(t),this.spatialReference);if(!s)return null;const i=this._ensureGeometryHasZ(s),o=$(i,this._hasZ,!1);return new z(o,{[u]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=i=>{for(;i.length<3;)i.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=s.z??0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach(i=>i.forEach(t));break;case"polygon":s.rings.forEach(i=>i.forEach(t))}return s}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=Z.toJSON(e),s=this._hasZ,i=new M({geometryType:t,hasZ:s,hasM:!1});return{featureStore:i,queryEngine:new W({featureStore:i,fields:[{name:u,type:"esriFieldTypeOID",alias:u}],geometryType:t,hasM:!1,hasZ:s,objectIdField:u,spatialReference:this.spatialReference,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),y(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:i,multipoint:o}=this._sources,n=[];return t!=null&&n.push(e(t)),s!=null&&n.push(e(s)),i!=null&&n.push(e(i)),o!=null&&n.push(e(o)),n}};a([p()],r.prototype,"getGraphicsLayers",void 0),a([p({constructOnly:!0})],r.prototype,"layerSource",void 0),a([p({constructOnly:!0})],r.prototype,"spatialReference",void 0),a([p({constructOnly:!0})],r.prototype,"view",void 0),a([p({readOnly:!0})],r.prototype,"updating",null),a([p({readOnly:!0})],r.prototype,"availability",void 0),a([p()],r.prototype,"_hasZ",null),a([p()],r.prototype,"_snappingElevationAligner",null),a([p()],r.prototype,"_snappingElevationFilter",null),a([p()],r.prototype,"_symbologySnappingFetcher",null),a([p()],r.prototype,"_extrudedPolygonSymbolsCount",void 0),a([p()],r.prototype,"_getGroundElevation",null),r=a([H("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],r);const u="OBJECTID";export{r as GraphicsSnappingSource};
