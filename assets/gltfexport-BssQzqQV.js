import{o0 as u,d6 as Y,be as k,$ as L,W as S,iG as Z,Y as se,Z as re,cr as j,g8 as ie,bk as C,o1 as ne,o2 as ae,o3 as q,kk as oe,a0 as he,mS as ce,j0 as fe,kj as $,N as A,o4 as le,o5 as ue,bq as de,o6 as _e,o7 as pe}from"./index-DXZ_271k.js";import{m as me}from"./MeshGeoreferencedRelativeVertexSpace-Cdav8J9n.js";import{p as ge}from"./MeshLocalVertexSpace-C-mwDpuG.js";import{E as we}from"./georeference-DxM-ngNZ.js";import{r as K,a as Te,g as Ae,c as be}from"./imageutils-DI-t-HQP.js";import"./MeshTransform-CigJ7y6o.js";var z;(function(i){i[i.JSON=1313821514]="JSON",i[i.BIN=5130562]="BIN"})(z||(z={}));class T{constructor(e,t){if(!e)throw new Error("GLB requires a JSON gltf chunk");this._length=T.HEADER_SIZE,this._length+=T.CHUNK_HEADER_SIZE;const s=this._textToArrayBuffer(e);if(this._length+=this._alignTo(s.byteLength,4),t&&(this._length+=T.CHUNK_HEADER_SIZE,this._length+=t.byteLength,t.byteLength%4))throw new Error("Expected BIN chunk length to be divisible by 4 at this point");this.buffer=new ArrayBuffer(this._length),this._outView=new DataView(this.buffer),this._writeHeader();const r=this._writeChunk(s,12,z.JSON,32);t&&this._writeChunk(t,r,z.BIN)}_writeHeader(){this._outView.setUint32(0,T.MAGIC,!0),this._outView.setUint32(4,T.VERSION,!0),this._outView.setUint32(8,this._length,!0)}_writeChunk(e,t,s,r=0){const n=this._alignTo(e.byteLength,4);for(this._outView.setUint32(t,n,!0),this._outView.setUint32(t+=4,s,!0),this._writeArrayBuffer(this._outView.buffer,e,t+=4,0,e.byteLength),t+=e.byteLength;t%4;)r&&this._outView.setUint8(t,r),t++;return t}_writeArrayBuffer(e,t,s,r,n){new Uint8Array(e,s,n).set(new Uint8Array(t,r,n),0)}_textToArrayBuffer(e){return new TextEncoder().encode(e).buffer}_alignTo(e,t){return t*Math.ceil(e/t)}}T.HEADER_SIZE=12,T.CHUNK_HEADER_SIZE=8,T.MAGIC=1179937895,T.VERSION=2;var R,b,E,w,W,V,J;(function(i){i[i.External=0]="External",i[i.DataURI=1]="DataURI",i[i.GLB=2]="GLB"})(R||(R={})),function(i){i[i.External=0]="External",i[i.DataURI=1]="DataURI",i[i.GLB=2]="GLB"}(b||(b={})),function(i){i[i.ARRAY_BUFFER=34962]="ARRAY_BUFFER",i[i.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER"}(E||(E={})),function(i){i.SCALAR="SCALAR",i.VEC2="VEC2",i.VEC3="VEC3",i.VEC4="VEC4",i.MAT2="MAT2",i.MAT3="MAT3",i.MAT4="MAT4"}(w||(w={})),function(i){i[i.POINTS=0]="POINTS",i[i.LINES=1]="LINES",i[i.LINE_LOOP=2]="LINE_LOOP",i[i.LINE_STRIP=3]="LINE_STRIP",i[i.TRIANGLES=4]="TRIANGLES",i[i.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",i[i.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(W||(W={})),function(i){i.OPAQUE="OPAQUE",i.MASK="MASK",i.BLEND="BLEND"}(V||(V={})),function(i){i[i.NoColor=0]="NoColor",i[i.FaceColor=1]="FaceColor",i[i.VertexColor=2]="VertexColor"}(J||(J={}));let ye=class{constructor(e,t,s,r,n){this._buffer=e,this._componentType=s,this._dataType=r,this._data=[],this._isFinalized=!1,this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,t.bufferViews||(t.bufferViews=[]),this.index=t.bufferViews.length,this._bufferView={buffer:e.index,byteLength:-1,target:n};const a=this._getElementSize();a>=4&&n!==E.ELEMENT_ARRAY_BUFFER&&(this._bufferView.byteStride=a),t.bufferViews.push(this._bufferView),this._numComponentsForDataType=this._calculateNumComponentsForDataType()}push(e){const t=this._data.length;if(this._data.push(e),this._accessorIndex>=0){const s=t%this._numComponentsForDataType,r=this._accessorMin[s];this._accessorMin[s]=typeof r!="number"?e:Math.min(r,e);const n=this._accessorMax[s];this._accessorMax[s]=typeof n!="number"?e:Math.max(n,e)}}get dataSize(){return this._data.length*this._sizeComponentType()}get byteSize(){function e(t,s){return s*Math.ceil(t/s)}return e(this.dataSize,4)}getByteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}get byteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}_createTypedArray(e,t){switch(this._componentType){case u.BYTE:return new Int8Array(e,t);case u.FLOAT:return new Float32Array(e,t);case u.SHORT:return new Int16Array(e,t);case u.UNSIGNED_BYTE:return new Uint8Array(e,t);case u.UNSIGNED_INT:return new Uint32Array(e,t);case u.UNSIGNED_SHORT:return new Uint16Array(e,t)}}writeOutToBuffer(e,t){this._createTypedArray(e,t).set(this._data)}writeAsync(e){if(this._asyncWritePromise)throw new Error("Can't write multiple bufferView values asynchronously");return this._asyncWritePromise=e.then(t=>{const s=new Uint8Array(t);for(let r=0;r<s.length;++r)this._data.push(s[r]);delete this._asyncWritePromise}),this._asyncWritePromise}startAccessor(e){if(this._accessorIndex>=0)throw new Error("Accessor was started without ending the previous one");this._accessorIndex=this._data.length,this._accessorAttribute=e;const t=this._numComponentsForDataType;this._accessorMin=new Array(t),this._accessorMax=new Array(t)}endAccessor(){if(this._accessorIndex<0)throw new Error("An accessor was not started, but was attempted to be ended");const e=this._getElementSize(),t=this._numComponentsForDataType,s=(this._data.length-this._accessorIndex)/t;if(s%1)throw new Error("An accessor was ended with missing component values");for(let n=0;n<this._accessorMin.length;++n)typeof this._accessorMin[n]!="number"&&(this._accessorMin[n]=0),typeof this._accessorMax[n]!="number"&&(this._accessorMax[n]=0);const r={byteOffset:e*(this._accessorIndex/t),componentType:this._componentType,count:s,type:this._dataType,min:this._accessorMin,max:this._accessorMax,name:this._accessorAttribute};switch(this._accessorAttribute){case"TEXCOORD_0":case"TEXCOORD_1":case"COLOR_0":case"WEIGHTS_0":switch(this._componentType){case u.UNSIGNED_BYTE:case u.UNSIGNED_SHORT:r.normalized=!0}}return this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,r}get finalized(){return this._finalizedPromise?this._finalizedPromise:this._isFinalized?this._finalizedPromise=Promise.resolve():this._finalizedPromise=new Promise(e=>this._finalizedPromiseResolve=e)}finalize(){const e=this._bufferView;return new Promise(t=>{const s=this._buffer.getViewFinalizePromises(this);this._asyncWritePromise&&s.push(this._asyncWritePromise),t(Y(s))}).then(()=>{this._isFinalized=!0,e.byteOffset=this.getByteOffset(),e.byteLength=this.dataSize,this._finalizedPromiseResolve&&this._finalizedPromiseResolve()})}_getElementSize(){return this._sizeComponentType()*this._numComponentsForDataType}_sizeComponentType(){switch(this._componentType){case u.BYTE:case u.UNSIGNED_BYTE:return 1;case u.SHORT:case u.UNSIGNED_SHORT:return 2;case u.UNSIGNED_INT:case u.FLOAT:return 4}}_calculateNumComponentsForDataType(){switch(this._dataType){case w.SCALAR:return 1;case w.VEC2:return 2;case w.VEC3:return 3;case w.VEC4:case w.MAT2:return 4;case w.MAT3:return 9;case w.MAT4:return 16}}},X=class{constructor(e){this._gltf=e,this._bufferViews=[],this._isFinalized=!1,e.buffers||(e.buffers=[]),this.index=e.buffers.length;const t={byteLength:-1};e.buffers.push(t),this._buffer=t}addBufferView(e,t,s){if(this._finalizePromise)throw new Error("Cannot add buffer view after fiinalizing buffer");const r=new ye(this,this._gltf,e,t,s);return this._bufferViews.push(r),r}getByteOffset(e){let t=0;for(const s of this._bufferViews){if(s===e)return t;t+=s.byteSize}throw new Error("Given bufferView was not present in this buffer")}getViewFinalizePromises(e){const t=[];for(const s of this._bufferViews){if(e&&s===e)return t;t.push(s.finalized)}return t}getArrayBuffer(){if(!this._isFinalized)throw new Error("Cannot get ArrayBuffer from Buffer before it is finalized");const e=this._getTotalSize(),t=new ArrayBuffer(e);let s=0;for(const r of this._bufferViews)r.writeOutToBuffer(t,s),s+=r.byteSize;return t}finalize(){var e;if(this._finalizePromise)throw new Error(`Buffer ${this.index} was already finalized`);return this._finalizePromise=new Promise(t=>{t(Y(this.getViewFinalizePromises()))}).then(()=>{this._isFinalized=!0;const t=this.getArrayBuffer();this._buffer.byteLength=t.byteLength,this._buffer.uri=t}),(e=this._gltf.extras)==null||e.promises.push(this._finalizePromise),this._finalizePromise}_getTotalSize(){let e=0;for(const t of this._bufferViews)e+=t.byteSize;return e}};function xe(i,e){if(i.components)for(const t of i.components)t.faces&&t.shading==="smooth"&&Ee(t,e)}function Ee(i,e){e.normal==null&&(e.normal=new Float32Array(e.position.length));const t=i.faces,{position:s,normal:r}=e,n=t.length/3;for(let a=0;a<n;++a){const o=3*t[3*a],h=3*t[3*a+1],d=3*t[3*a+2],m=L(Ne,s[o],s[o+1],s[o+2]),_=L(Ie,s[h],s[h+1],s[h+2]),f=L(Oe,s[d],s[d+1],s[d+2]),g=Z(_,_,m),p=Z(f,f,m),l=se(g,g,p);r[o]+=l[0],r[o+1]+=l[1],r[o+2]+=l[2],r[h]+=l[0],r[h+1]+=l[1],r[h+2]+=l[2],r[d]+=l[0],r[d+1]+=l[1],r[d+2]+=l[2]}for(let a=0;a<r.length;a+=3)L(N,r[a],r[a+1],r[a+2]),re(N,N),r[a]=N[0],r[a+1]=N[1],r[a+2]=N[2]}function Re(i){const{vertexSpace:e}=i;if(e.isRelative)return e.getOriginPoint(i.spatialReference);const{extent:t}=i,s=t.xmax-t.width/2,r=t.ymax-t.height/2,n=t.zmin;return new k({x:s,y:r,z:n,spatialReference:t.spatialReference})}const Ne=S(),Ie=S(),Oe=S(),N=S(),v=he.getLogger("gltf");class Se{constructor(e,t,s){this.params={},this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:"2.0",copyright:e.copyright,generator:e.generator},extras:{options:t,binChunkBuffer:null,promises:[]}},s&&(this.params=s),this._addScenes(e)}_addScenes(e){this.gltf.scene=e.defaultScene;const t=this.gltf.extras,s=t.options.bufferOutputType===R.GLB||t.options.imageOutputType===b.GLB;s&&(t.binChunkBuffer=new X(this.gltf)),e.forEachScene(r=>{this._addScene(r)}),s&&t.binChunkBuffer.finalize()}_addScene(e){this.gltf.scenes||(this.gltf.scenes=[]);const t={};e.name&&(t.name=e.name),e.forEachNode(s=>{t.nodes||(t.nodes=[]);const r=this._addNode(s);t.nodes.push(r)}),this.gltf.scenes.push(t)}_addNode(e){this.gltf.nodes||(this.gltf.nodes=[]);const t={};e.name&&(t.name=e.name);const s=e.translation;j(s,ie)||(t.translation=C(s));const r=e.rotation;ne(r,le)||(t.rotation=ae(r));const n=e.scale;j(n,q)||(t.scale=C(n)),e.mesh&&e.mesh.vertexAttributes.position?t.mesh=this._addMesh(e.mesh):e.forEachNode(o=>{t.children||(t.children=[]);const h=this._addNode(o);t.children.push(h)});const a=this.gltf.nodes.length;return this.gltf.nodes.push(t),a}_addMesh(e){this.gltf.meshes||(this.gltf.meshes=[]);const t={primitives:[]},s=this.gltf.extras,r=s.options.bufferOutputType===R.GLB;let n;n=r?s.binChunkBuffer:new X(this.gltf),this.params.origin||(this.params.origin=Re(e));const{ignoreLocalTransform:a}=this.params,o=a?null:e.transform,{vertexSpace:h}=e,d=a?h.isRelative?new me({origin:C(h.origin)}):new ge:h,m=we(e.vertexAttributes,d,o,this.params.origin,{geographic:this.params.geographic,unit:"meters"});xe(e,m),this._flipYZAxis(m);const _=n.addBufferView(u.FLOAT,w.VEC3,E.ARRAY_BUFFER);let f,g,p,l;m.normal&&(f=n.addBufferView(u.FLOAT,w.VEC3,E.ARRAY_BUFFER)),e.vertexAttributes.uv&&(g=n.addBufferView(u.FLOAT,w.VEC2,E.ARRAY_BUFFER)),m.tangent&&(p=n.addBufferView(u.FLOAT,w.VEC4,E.ARRAY_BUFFER)),e.vertexAttributes.color&&(l=n.addBufferView(u.UNSIGNED_BYTE,w.VEC4,E.ARRAY_BUFFER)),_.startAccessor("POSITION"),f&&f.startAccessor("NORMAL"),g&&g.startAccessor("TEXCOORD_0"),p&&p.startAccessor("TANGENT"),l&&l.startAccessor("COLOR_0");const y=m.position.length/3,{position:x,normal:M,tangent:I}=m,{color:O,uv:F}=e.vertexAttributes;for(let c=0;c<y;++c)_.push(x[3*c]),_.push(x[3*c+1]),_.push(x[3*c+2]),f&&M!=null&&(f.push(M[3*c]),f.push(M[3*c+1]),f.push(M[3*c+2])),g&&F!=null&&(g.push(F[2*c]),g.push(F[2*c+1])),p&&I!=null&&(p.push(I[4*c]),p.push(I[4*c+1]),p.push(I[4*c+2]),p.push(I[4*c+3])),l&&O!=null&&(l.push(O[4*c]),l.push(O[4*c+1]),l.push(O[4*c+2]),l.push(O[4*c+3]));const ee=_.endAccessor(),H=this._addAccessor(_.index,ee);let D,P,G,U,B;if(f){const c=f.endAccessor();D=this._addAccessor(f.index,c)}if(g){const c=g.endAccessor();P=this._addAccessor(g.index,c)}if(p){const c=p.endAccessor();G=this._addAccessor(p.index,c)}if(l){const c=l.endAccessor();U=this._addAccessor(l.index,c)}e.components&&e.components.length>0&&e.components[0].faces?(B=n.addBufferView(u.UNSIGNED_INT,w.SCALAR,E.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(B,e.components,t,H,D,P,G,U)):this._addMeshVertexNonIndexed(e.components,t,H,D,P,G,U),_.finalize(),f&&f.finalize(),g&&g.finalize(),p&&p.finalize(),B&&B.finalize(),l&&l.finalize(),r||n.finalize();const te=this.gltf.meshes.length;return this.gltf.meshes.push(t),te}_flipYZAxis({position:e,normal:t,tangent:s}){this._flipYZBuffer(e,3),this._flipYZBuffer(t,3),this._flipYZBuffer(s,4)}_flipYZBuffer(e,t){if(e!=null)for(let s=1,r=2;s<e.length;s+=t,r+=t){const n=e[s],a=e[r];e[s]=a,e[r]=-n}}_addMaterial(e){if(e===null)return;const t=this._materialMap.indexOf(e);if(t!==-1)return t;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(e.alphaMode){case"mask":s.alphaMode=V.MASK;break;case"auto":case"blend":s.alphaMode=V.BLEND}e.alphaCutoff!==.5&&(s.alphaCutoff=e.alphaCutoff),e.doubleSided&&(s.doubleSided=e.doubleSided),s.pbrMetallicRoughness={};const r=o=>o**2.1,n=o=>{const h=o.toRgba();return h[0]=r(h[0]/255),h[1]=r(h[1]/255),h[2]=r(h[2]/255),h};if(e.color!=null&&(s.pbrMetallicRoughness.baseColorFactor=n(e.color)),e.colorTexture!=null&&(s.pbrMetallicRoughness.baseColorTexture=this._createTextureInfo(e.colorTexture,e.colorTextureTransform)),e.normalTexture!=null&&(s.normalTexture=this._createTextureInfo(e.normalTexture,e.normalTextureTransform)),e instanceof oe){if(e.emissiveTexture!=null&&(s.emissiveTexture=this._createTextureInfo(e.emissiveTexture,e.emissiveTextureTransform)),e.emissiveColor!=null){const o=n(e.emissiveColor);s.emissiveFactor=[o[0],o[1],o[2]]}e.occlusionTexture!=null&&(s.occlusionTexture=this._createTextureInfo(e.occlusionTexture,e.occlusionTextureTransform)),e.metallicRoughnessTexture!=null&&(s.pbrMetallicRoughness.metallicRoughnessTexture=this._createTextureInfo(e.metallicRoughnessTexture,e.metallicRoughnessTextureTransform)),s.pbrMetallicRoughness.metallicFactor=e.metallic,s.pbrMetallicRoughness.roughnessFactor=e.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1,v.warnOnce("Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.");const a=this.gltf.materials.length;return this.gltf.materials.push(s),this._materialMap.push(e),a}_createTextureInfo(e,t){const s={index:this._addTexture(e)};return t&&(s.extensions||(s.extensions={}),s.extensions.KHR_texture_transform={scale:t.scale,offset:t.offset,rotation:ce(t.rotation)}),s}_addTexture(e){const t=this.gltf.textures??[];return this.gltf.textures=t,fe(this._textureMap,e,()=>{const s={sampler:this._addSampler(e),source:this._addImage(e)},r=t.length;return t.push(s),r})}_addImage(e){const t=this._imageMap.get(e);if(t!=null)return t;this.gltf.images||(this.gltf.images=[]);const s={};if(e.url)s.uri=e.url;else{const n=e.data;s.extras=n;for(let o=0;o<this.gltf.images.length;++o)if(n===this.gltf.images[o].extras)return o;const a=this.gltf.extras;switch(a.options.imageOutputType){case b.GLB:{const o=a.binChunkBuffer.addBufferView(u.UNSIGNED_BYTE,w.SCALAR);if($(n))n.data!=null&&o.writeOutToBuffer(n.data,0);else{const h=K(n).then(({data:d,type:m})=>(s.mimeType=m,d));o.writeAsync(h).then(()=>{o.finalize()})}s.bufferView=o.index;break}case b.DataURI:if($(n)){v.warnOnce("Image export for basis compressed textures not available.");break}s.uri=Te(n);break;default:if($(n)){v.warnOnce("Image export for basis compressed textures not available.");break}a.promises.push(K(n).then(({data:o,type:h})=>{s.uri=o,s.mimeType=h}))}}const r=this.gltf.images.length;return this.gltf.images.push(s),this._imageMap.set(e,r),r}_addSampler(e){this.gltf.samplers||(this.gltf.samplers=[]);let t=A.REPEAT,s=A.REPEAT;if(typeof e.wrap=="string")switch(e.wrap){case"clamp":t=A.CLAMP_TO_EDGE,s=A.CLAMP_TO_EDGE;break;case"mirror":t=A.MIRRORED_REPEAT,s=A.MIRRORED_REPEAT}else{switch(e.wrap.vertical){case"clamp":s=A.CLAMP_TO_EDGE;break;case"mirror":s=A.MIRRORED_REPEAT}switch(e.wrap.horizontal){case"clamp":t=A.CLAMP_TO_EDGE;break;case"mirror":t=A.MIRRORED_REPEAT}}const r={wrapS:t,wrapT:s};for(let a=0;a<this.gltf.samplers.length;++a)if(JSON.stringify(r)===JSON.stringify(this.gltf.samplers[a]))return a;const n=this.gltf.samplers.length;return this.gltf.samplers.push(r),n}_addAccessor(e,t){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:e,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type,min:t.min,max:t.max,name:t.name};t.normalized&&(s.normalized=!0);const r=this.gltf.accessors.length;return this.gltf.accessors.push(s),r}_addMeshVertexIndexed(e,t,s,r,n,a,o,h){for(const d of t){e.startAccessor("INDICES");for(let f=0;f<d.faces.length;++f)e.push(d.faces[f]);const m=e.endAccessor(),_={attributes:{POSITION:r},indices:this._addAccessor(e.index,m),material:this._addMaterial(d.material)};n&&d.shading!=="flat"&&(_.attributes.NORMAL=n),a&&(_.attributes.TEXCOORD_0=a),o&&d.shading!=="flat"&&(_.attributes.TANGENT=o),h&&(_.attributes.COLOR_0=h),s.primitives.push(_)}}_addMeshVertexNonIndexed(e,t,s,r,n,a,o){const h={attributes:{POSITION:s}};r&&(h.attributes.NORMAL=r),n&&(h.attributes.TEXCOORD_0=n),a&&(h.attributes.TANGENT=a),o&&(h.attributes.COLOR_0=o),e&&(h.material=this._addMaterial(e[0].material)),t.primitives.push(h)}}let Me=class{constructor(){this.copyright="",this.defaultScene=0,this.generator="",this._scenes=[]}addScene(e){if(this._scenes.includes(e))throw new Error("Scene already added");this._scenes.push(e)}removeScene(e){ue(this._scenes,e)}forEachScene(e){this._scenes.forEach(e)}};class Be{constructor(){this.name="",this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}}class Le{constructor(e){this.mesh=e,this.name="",this.translation=S(),this.rotation=de(),this.scale=C(q),this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}set rotationAngles(e){_e(this.rotation,e[0],e[1],e[2])}}const Ce="model.gltf",Q="model.glb";function ze(i,e,t){var _;const s=new Se(i,e=e||{},t);let r=s.params;r?r.origin||(r.origin=new k({x:-1,y:-1,z:-1})):r={origin:new k({x:-1,y:-1,z:-1})};const n=r.origin,a=s.gltf,o=((_=a.extras)==null?void 0:_.promises)??[];let h=1,d=1,m=null;return Y(o).then(()=>{const f={origin:n};delete a.extras;const g=typeof e.jsonSpacing=="number"?e.jsonSpacing:4,p=JSON.stringify(a,(l,y)=>{if(l!=="extras"){if(y instanceof ArrayBuffer){if(Ae(y))switch(e.imageOutputType){case b.DataURI:case b.GLB:break;case b.External:default:{const x=`img${d}.png`;return d++,f[x]=y,x}}switch(e.bufferOutputType){case R.DataURI:return be(y);case R.GLB:if(m)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(m=y);case R.External:default:{const x=`data${h}.bin`;return h++,f[x]=y,x}}}return y}},g);return e.bufferOutputType===R.GLB||e.imageOutputType===b.GLB?f[Q]=new T(p,m).buffer:f[Ce]=p,f})}function Ve(i,e){return ze(i,{bufferOutputType:R.GLB,imageOutputType:b.GLB,jsonSpacing:0},e)}class Fe{constructor(e,t){this._file={type:"model/gltf-binary",data:e},this.origin=t}buffer(){return Promise.resolve(this._file)}download(e){pe(new Blob([this._file.data],{type:this._file.type}),e)}}function Ze(i,e){const t=new Me,s=new Be;return t.addScene(s),s.addNode(new Le(i)),Ve(t,e).then(r=>new Fe(r[Q],r.origin))}export{Ze as toBinaryGLTF};
