import{gm as D,gn as $,a$ as v,go as q,gp as z,gq as C,gr as F,gs as G,R as O,gt as E}from"./index-BZRBOKU4.js";async function A(s,d,p,l,r){const{elevationProvider:h,renderCoordsHelper:c,spatialReference:I}=s,{elevationInfo:y}=d,m=D(y,!0),b=await $(m,I,r);v(r);const i=[],u=new Set,f=new Set;for(const{objectId:e,points:t}of l){const n=p(e);if(n==null){for(const o of t)i.push(o.z??0);u.add(e);continue}n.isDraped&&f.add(e);const a=n.graphic.geometry;R.setFromElevationInfo(z(a,y)),R.updateFeatureExpressionInfoContext(b,n.graphic,d),g.spatialReference=s.spatialReference;for(const{x:o,y:j,z:x}of t)g.x=o,g.y=j,g.z=x??0,F(g,h,R,c,w),i.push(w.z)}return{elevations:i,drapedObjectIds:f,failedObjectIds:u}}const R=new q,g=C(0,0,0,O.WGS84),w=new G;async function B(s,d,p){if(s==null||d.candidates.length===0)return S;const l=s.graphics3DGraphicsByObjectID??s.graphics3DGraphics,r=[],h=[],{renderer:c}=s,I=c!=null&&"arcadeRequired"in c&&c.arcadeRequired?E():null,y=async(e,{graphic:t,graphics3DSymbol:n})=>{const a=await I,o=await s.getRenderingInfoAsync(t,c,a,{signal:p});return o==null?[]:n.queryForSnapping(e,b,o,p)},{candidates:m,spatialReference:b}=d;for(let e=0;e<m.length;++e){const t=m[e],{objectId:n}=t,a=typeof n=="number"?l==null?void 0:l.get(n):void 0;if(a==null)continue;const{graphics3DSymbol:o}=a;o.symbologySnappingSupported&&(r.push(y(t,a)),h.push(e))}if(r.length===0)return S;const i=await Promise.all(r);v(p);const u=[],f=[];for(let e=0;e<i.length;++e){const t=i[e],n=h[e];for(const a of t)u.push(a),f.push(n)}return{candidates:u,sourceCandidateIndices:f}}const S={candidates:[],sourceCandidateIndices:[]};export{A as f,B as r};
