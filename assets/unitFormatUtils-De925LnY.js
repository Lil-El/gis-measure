import{aH as c,aI as l,aJ as s,aK as D,aL as p,aM as F,aN as b,aO as y,aP as h,aQ as B,aR as M,aS as S}from"./index-ZXy_8vtR.js";function $(i,n,t){return i.units[n][t]}function o(i,n,t,e=2,a="abbr"){return`${c(n,{minimumFractionDigits:e,maximumFractionDigits:e,signDisplay:n>0?"never":"exceptZero"})} ${$(i,t,a)}`}function m(i,n,t,e=2,a="abbr"){return`${c(n,{minimumFractionDigits:e,maximumFractionDigits:e,signDisplay:"exceptZero"})} ${$(i,t,a)}`}function Z(i,n,t,e=2,a="abbr"){const r=F(n,t);return o(i,s(n,t,r),r,e,a)}function v(i,n,t,e=2,a="abbr"){const r=F(n,t);return m(i,s(n,t,r),r,e,a)}function E(i,n,t,e=2,a="abbr"){const r=p(n,t);return o(i,s(n,t,r),r,e,a)}function K(i,n,t,e=2,a="abbr"){const r=p(n,t);return m(i,s(n,t,r),r,e,a)}function T(i,n,t,e=2,a="abbr"){const r=D(n,t);return o(i,s(n,t,r),r,e,a)}function z(i,n,t,e=2,a="abbr"){const r=D(n,t);return m(i,s(n,t,r),r,e,a)}function J(i,n,t,e=2,a="abbr"){const r=l(n,t);return o(i,s(n,t,r),r,e,a)}function L(i,n,t,e=2,a="abbr"){const r=l(n,t);return m(i,s(n,t,r),r,e,a)}function N(i,n,t,e=2,a="abbr"){const r=B(n,t);return o(i,s(n,t,r),r,e,a)}function U(i,n,t,e=2,a="abbr"){const r=M(n,t);return o(i,s(n,t,r),r,e,a)}function Y(i,n,t,e,a){a=a??2;let r=h.normalize(w(s(i,n,"degrees"),t,e),0,!0);const u={style:"unit",unitDisplay:"narrow",unit:"degree",maximumFractionDigits:a,minimumFractionDigits:a,signDisplay:r>0?"never":"exceptZero"};return r=x(r,u),c(r,u)}function j(i,n,t,e,a){t!==e&&(i=-i);const r={style:"unit",unitDisplay:"narrow",unit:"degree",maximumFractionDigits:a=a??2,minimumFractionDigits:a,signDisplay:"exceptZero"};let u=s(i,n,"degrees")%360;return u=x(u,r),c(u,r)}const f=new Map;function x(i,n){const t=JSON.stringify(n);let e=f.get(t);return e||(e=new Intl.NumberFormat("en-US",n),f.set(t,e)),/\-?\+?360/.test(e.format(i))?0:i}function w(i,n,t){if(n===t)return i;switch(t){case"arithmetic":return O(i);case"geographic":return d(i)}}function O(i){return 90-i}function d(i){return-i-90}const g=["B","kB","MB","GB","TB"];function k(i,n){let t=n===0?0:Math.floor(Math.log(n)/Math.log(b.KILOBYTES));t=S(t,0,g.length-1);const e=c(n/b.KILOBYTES**t,{maximumFractionDigits:2});return y(i.units.bytes[g[t]],{fileSize:e})}export{U as $,L as B,v as D,K as F,N as M,Y as S,o as b,J as d,m as g,z as h,Z as p,k as v,j as w,E as x,T as y};
