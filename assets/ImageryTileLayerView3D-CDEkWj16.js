import{e as n,y as l,bH as F,a as S,b as v,p as j,a_ as L,fg as O,fh as P}from"./index-Cy4mlNgs.js";import{n as _}from"./LayerView3D-B5eS-Fo2.js";import{o as G}from"./TiledLayerView3D-3W_Ax9qS.js";import{T as E,q as M}from"./rasterProjectionHelper-B1w0mGfx.js";import{p as V}from"./popupUtils-BWvNn-dk.js";import{d as k}from"./LayerView-D3-CfPeq.js";import{a as A}from"./RefreshableLayerView-Bdq8XFIz.js";import{r as W}from"./drapedUtils-CV616km_.js";const $=r=>{let e=class extends r{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){return E(this.layer.fullExtent,this.view.spatialReference,!0)}supportsSpatialReference(t){return!!this.projectFullExtent(t)}projectFullExtent(t){const a=this.layer.fullExtent,i=E(a,t,!1);return M(a,t,i)}async fetchPopupFeatures(t,a){const{layer:i}=this;if(!t)throw new v("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:m}=i,y=V(i,a);if(!m||y==null)throw new v("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:m,popupTemplate:y});const p=[],{value:o,magdirValue:s,processedValue:b}=await i.identify(t,{timeExtent:this.timeExtent});let c="";if(o&&o.length){c=i.type==="imagery-tile"&&i.hasStandardTime()&&o[0]!=null?o.map(w=>i.getStandardTimeValue(w)).join(", "):o.join(", ");const d={ObjectId:0},T="Raster.ServicePixelValue";d[T]=(b==null?void 0:b.join(", "))??c,d[T+".Raw"]=c;const x=i.rasterInfo.attributeTable;if(x!=null){const{fields:w,features:z}=x,R=w.find(({name:u})=>u.toLowerCase()==="value"),g=R?z.find(u=>String(u.attributes[R.name])===c):null;if(g)for(const u in g.attributes)g.attributes.hasOwnProperty(u)&&(d[this._rasterFieldPrefix+u]=g.attributes[u])}const I=i.rasterInfo.dataType;I!=="vector-magdir"&&I!=="vector-uv"||(d["Raster.Magnitude"]=s==null?void 0:s[0],d["Raster.Direction"]=s==null?void 0:s[1]);const f=new j(this.fullExtent.clone(),null,d);f.layer=i,f.sourceLayer=f.layer,p.push(f)}return p}};return n([l()],e.prototype,"layer",void 0),n([l(F)],e.prototype,"timeExtent",void 0),n([l()],e.prototype,"view",void 0),n([l()],e.prototype,"fullExtent",null),n([l()],e.prototype,"tileInfo",void 0),n([l({readOnly:!0})],e.prototype,"hasTilingEffects",null),n([l()],e.prototype,"datumTransformation",null),e=n([S("esri.views.layers.ImageryTileLayerView")],e),e};let h=class extends $(A(G(_(k)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new v("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const r=L(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.basemapTerrain)==null?void 0:t.tilingSchemeLocked}).then(()=>{const e=this.view.basemapTerrain.tilingScheme,t=this.layer.tileInfo,a=["png","png24","png32","jpg","mixed"].includes(t.format)&&e.compatibleWith(t);this.isAlignedMapTile=a;const i=a?t:e.toTileInfo();this.tileInfo=i,this.updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent],()=>this.refresh())});this.addResolvingPromise(r)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const r=document.createElement("canvas"),e=r.getContext("2d"),[t,a]=this.tileInfo.size;return r.width=t,r.height=a,e.clearRect(0,0,t,a),e.getImageData(0,0,t,a)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){const r=this.tileInfo.lods,e=this.layer.tileInfo.lods,t=r[0].scale,a=e[e.length-1].scale;return this.levelRangeFromScaleRange(t,a)}_getfullExtent(){return this.projectFullExtent(this.view.basemapTerrain&&this.view.basemapTerrain.spatialReference!=null?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(r,e,t,a){const i=this.tileInfo,m=this._canSymbolizeInWebGL(),y={tileInfo:i,requestRawData:m,signal:a.signal,timeExtent:this.timeExtent,requestAsImageElement:this.isAlignedMapTile},p=await this.layer.fetchTile(r,e,t,y);if(p instanceof HTMLImageElement)return p;let o=p&&p.pixelBlock;if(o==null)return this._blankTile;if(!m&&(o=await this.layer.applyRenderer(p),o==null))return this._blankTile;const s=new O([r,e,t],o,i.size[0],i.size[1]);return m?(s.symbolizerRenderer=this.layer.symbolizer.rendererJSON,s.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(r)),s.transformGrid=p.transformGrid):s.isRendereredSource=!0,s.interpolation=this.layer.interpolation,s.bandIds=this.layer.bandIds,s}_getSymbolizerOptions(r){const e=this.tileInfo.lodAt(r).resolution;return{pixelBlock:null,isGCS:this.view.basemapTerrain&&this.view.basemapTerrain.spatialReference!=null?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:e,y:e},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(r){this._canSymbolizeInWebGL()&&JSON.stringify(r.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(r.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(r.lij[0])))}createFetchPopupFeaturesQueryGeometry(r,e){return W(r,e,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){return P("3d").supportsTextureFloat&&this.layer.symbolizer.canRenderInWebGL}};n([l({readOnly:!0})],h.prototype,"_blankTile",null),n([l({readOnly:!0})],h.prototype,"imageFormatIsOpaque",null),n([l({readOnly:!0})],h.prototype,"hasMixedImageFormats",null),n([l({readOnly:!0})],h.prototype,"dataLevelRange",null),h=n([S("esri.views.3d.layers.ImageryTileLayerView3D")],h);const Q=h;export{Q as default};
