import{k as n,h as p,p as m,e as i,y as e,q as l,a as d}from"./index-DXZ_271k.js";import{x as h}from"./I3SMeshView3D-CZL_gvE5.js";import{n as u}from"./LayerView3D-Sf5UcdS3.js";import{d as c}from"./LayerView-D85gm5GC.js";import"./I3SOverrides-BebRJnvf.js";import"./I3SNode-DNGZDUmH.js";import"./I3SUtil-DJxVKp-0.js";import"./I3SBinaryReader-BbQxd5NY.js";import"./meshFeatureSet-CtIecFtb.js";import"./MeshGeoreferencedRelativeVertexSpace-Cdav8J9n.js";import"./MeshLocalVertexSpace-C-mwDpuG.js";import"./MeshTransform-CigJ7y6o.js";import"./georeference-DxM-ngNZ.js";import"./External-Di8fUujv.js";import"./FeatureLayerView3D-CnBdWAGH.js";import"./FeatureLayerViewBase3D-Ysb1DUEh.js";import"./HeatmapDensity.glsl-DAGCSh3F.js";import"./dehydratedFeatureComparison-CuMnCfoB.js";import"./queryForSymbologySnapping-BO2wZdhi.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-3frr4UpG.js";import"./optimizedFeatureQueryEngineAdapter-Cw430D86.js";import"./centroid-BDoZr6aR.js";import"./PooledRBush-BPeon5hL.js";import"./quickselect-6rhOiUTK.js";import"./popupUtils-Bjx5dW4N.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-BrcpEFqq.js";import"./normalizeUtils-CDS1zMoz.js";import"./normalizeUtilsCommon-2BmMsmbE.js";import"./WhereClause-DBaFEMxw.js";import"./executionError-N6aCOFps.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-Dk3NJwmm.js";import"./utils-Cm2_MhmP.js";import"./generateRendererUtils-Cc7cXku3.js";import"./FeatureStore-D3QnQQoO.js";import"./BoundsStore-dpF2-ksy.js";import"./projectExtentUtils-N1kSHxFC.js";import"./query-DwokXksF.js";import"./pbfQueryUtils-VoJj__sR.js";import"./pbf-B2bOPeqh.js";import"./EventedSet-Cxwt6mUw.js";import"./RefreshableLayerView-DRjbWieh.js";import"./SceneLayerWorker-DlwvIaij.js";const g=.2;let r=class extends h(u(c)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const pt=r;export{pt as default};
